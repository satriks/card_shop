"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from datetime import timedelta

import environ
from pathlib import Path

import os
from dotenv import load_dotenv
# Загружаем переменные окружения из файла .env
load_dotenv()

# Настройки для API YOOKASSA
YOOKASSA_SHOP_ID = os.getenv('YKASSA_ID')
YOOKASSA_API_KEY = os.getenv('YKASSA_SECRET')

# Настройки для API СДЭК
SDEK_API_URL = os.getenv("SDEK_API_URL")
SDEK_API_ID = os.getenv("SDEK_API_ID")
SDEK_API_SECRET = os.getenv("SDEK_API_SECRET")
OWNER_EMAIL = os.getenv("OWNER_EMAIL")

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
BASE_HOST = os.getenv("BASE_HOST")
TEST_SITE = os.getenv("TEST_SITE")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-o85pa2&rco30tehse=_@7nc95!yxq9wyt%mm9l-o#p+&2%2xt&'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
        'file': {
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'django.log'),
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console', 'file'],
            'level': 'INFO',
            'propagate': True,
        },
        'myapp': {  # Замените 'myapp' на имя вашего приложения
            'handlers': ['console', 'file'],
            'level': 'DEBUG',
            'propagate': False,
        },
    },
}

# Настройки для RQ
RQ_QUEUES = {
    'default': {
        'URL': os.environ.get('REDIS_URL', 'redis://127.0.0.1:6379/0'),
        'DEFAULT_TIMEOUT': 500,
    },
}

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    "fleshly-slick-wildcat.cloudpub.ru",
    "hourly-adroit-crab.cloudpub.ru",  # Укажите домен без протокола
    "localhost",
    "127.0.0.1",]

CSRF_TRUSTED_ORIGINS = [
    'https://fleshly-slick-wildcat.cloudpub.ru',
    'https://hourly-adroit-crab.cloudpub.ru',
]

CORS_ALLOW_CREDENTIALS = True
CORS_ALLOWED_ORIGINS = [
       "http://localhost:5173",  # Замените на ваш фронтенд-домен
       "http://127.0.0.1:8000",
        "https://fleshly-slick-wildcat.cloudpub.ru",
        "https://hourly-adroit-crab.cloudpub.ru",
   ]
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "admin_interface",
    'corsheaders',
    "colorfield",
    'rest_framework',
    'rest_framework_simplejwt',
    'rest_framework_simplejwt.token_blacklist',
    'store',
    'cards.apps.CardsConfig',
    'delivery',
    "payments",
    "yookassa",
    "orders",
    'django_rq',
]

X_FRAME_OPTIONS = "SAMEORIGIN"
SILENCED_SYSTEM_CHECKS = ["security.W019"]

ADMIN_INTERFACE_THEME = 'purple'  # Выберите тему: 'default', 'light', 'dark'

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'


SIMPLE_JWT = {

    'ROTATE_REFRESH_TOKENS': True,

    'BLACKLIST_AFTER_ROTATION': True,

    'ACCESS_TOKEN_LIFETIME': timedelta(hours=1),

    'REFRESH_TOKEN_LIFETIME': timedelta(days=60),

}


# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': 'redis://localhost:6379/1',
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
        }
    }
}

# Database
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_USER_MODEL = 'store.CustomUser'

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'ru'  # Установите язык по умолчанию

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

# STATIC_URL = 'static/'


# Определите URL, по которому будут доступны статические файлы
# STATIC_URL = '/static/'


STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATIC_URL = '/static/'
# STATICFILES_DIRS = [BASE_DIR / 'static',]

# MEDIA_URL = '/media/'
# MEDIA_ROOT = BASE_DIR / os.getenv('MEDIA_ROOT')
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# storage

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Email
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.mail.ru'  # SMTP-сервер mail.ru
EMAIL_PORT = 587  # Порт для TLS
EMAIL_USE_TLS = True  # Использовать TLS
EMAIL_HOST_USER = os.getenv('OWNER_EMAIL')  # Ваш email на mail.ru
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_PASSWORD')  # Ваш пароль от почты
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER


# # Celery
#
# CELERY_BROKER_URL = 'redis://127.0.0.1:6379'
# CELERY_RESULT_BACKEND = 'redis://127.0.0.1:6379'